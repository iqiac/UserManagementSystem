services:
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      target: dev
      args:
        - USER=${USER}
        - UID=${UID}
    env_file: .env
    container_name: frontend-dev
    profiles: ["develop"]
    image: frontend-dev:latest
    volumes:
      - .:/workspace
      - ~/.ssh:${HOME}/.ssh
    ports:
      - 4200:4200
    networks:
      - user-management-system
  
  frontend-run:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      target: run
    container_name: frontend-run
    image: frontend-run:latest
    profiles: ["deploy"]
    restart: unless-stopped
    ports:
      - 8081:80
    networks:
      - user-management-system

  backend-dev:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      target: dev
      args:
        - USER=${USER}
        - UID=${UID}
    env_file: .env
    container_name: backend-dev
    profiles: ["develop"]
    image: backend-dev:latest
    volumes:
      - .:/workspace
      - ~/.ssh:${HOME}/.ssh
    ports:
      - 8080:8080
    networks:
      - user-management-system

  backend-run:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      target: run
    container_name: backend-run
    image: backend-run:latest
    profiles: ["deploy"]
    restart: unless-stopped
    depends_on:
      - database
    ports:
      - 8080:8080
    networks:
    - user-management-system

  database:
    image: mysql:latest
    container_name: database
    profiles: ["deploy", "develop"]
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=mydb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    ports:
      - 3306:3306
    networks:
      - user-management-system

networks:
  user-management-system:
    driver: bridge
